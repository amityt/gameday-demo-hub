apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: boutique-cart-network-loss
  namespace: litmus
spec:
  arguments:
    parameters:
      - name: adminModeNamespace
        value: litmus
  entrypoint: custom-chaos
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
    - name: custom-chaos
      steps:
        - - name: install-chaos-faults
            template: install-chaos-faults
        - - name: pod-network-loss-sqn
            template: pod-network-loss-sqn
        - - name: alert-notify
            template: alert-notify
    - name: install-chaos-faults
      inputs:
        artifacts:
          - name: pod-network-loss-sqn
            path: /tmp/pod-network-loss-sqn.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects network packet loss on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-network-loss
                  labels:
                    name: pod-network-loss
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 2.13.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: chaosnative/go-runner:3.0.3-saas
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-network-loss
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: LIB_IMAGE
                        value: chaosnative/go-runner:3.0.3-saas
                      - name: NETWORK_INTERFACE
                        value: eth0
                      - name: TC_IMAGE
                        value: gaiadocker/iproute2
                      - name: NETWORK_PACKET_LOSS_PERCENTAGE
                        value: "100"
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: LIB
                        value: litmus
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: NODE_LABEL
                        value: ""
                      - name: CONTAINER_RUNTIME
                        value: docker
                      - name: DESTINATION_IPS
                        value: ""
                      - name: DESTINATION_HOSTS
                        value: ""
                      - name: SOCKET_PATH
                        value: /var/run/docker.sock
                      - name: SEQUENCE
                        value: parallel
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                    labels:
                      name: pod-network-loss
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 2.13.0
      container:
        args:
          - kubectl apply -f /tmp/pod-network-loss-sqn.yaml -n
            {{workflow.parameters.adminModeNamespace}} &&  sleep 30
        command:
          - sh
          - -c
        image: chaosnative/k8s:2.13.0
    - name: pod-network-loss-sqn
      inputs:
        artifacts:
          - name: pod-network-loss-sqn
            path: /tmp/chaosengine-pod-network-loss-sqn.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  generateName: pod-network-loss-sqn
                  labels:
                    workflow_run_id: "{{workflow.uid}}"
                    workflow_name: "{{workflow.name}}"
                spec:
                  engineState: active
                  appinfo:
                    appns: boutique
                    applabel: app=cartservice
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-network-loss
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: NETWORK_PACKET_LOSS_PERCENTAGE
                              value: "100"
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: PODS_AFFECTED_PERC
                              value: "100"
                        probe:
                          - name: healthcheck
                            type: cmdProbe
                            mode: Edge
                            runProperties:
                              probeTimeout: 180
                              retry: 0
                              interval: 1
                              stopOnFailure: true
                            cmdProbe/inputs:
                              command: ./healthcheck -name pod-level
                              source:
                                image: chaosnative/go-runner:3.0.3-saas
                                inheritInputs: true
                              comparator:
                                type: string
                                criteria: contains
                                value: "[P000]"
                          - name: prom-probe
                            type: promProbe
                            mode: Edge
                            runProperties:
                              probeTimeout: 5
                              retry: 2
                              interval: 2
                              initialDelaySeconds: 1
                              stopOnFailure: false
                            promProbe/inputs:
                              endpoint: http://35.223.56.74:9090
                              query: avg_over_time(probe_duration_seconds{job=\"prometheus-blackbox-exporter\",instance=\"frontend.boutique.svc.cluster.local:80\"}[60s:1s])*1000
                              comparator:
                                type: float
                                criteria: <=
                                value: "50"
      container:
        args:
          - -file=/tmp/chaosengine-pod-network-loss-sqn.yaml
          - -saveName=/tmp/engine-name
        image: chaosnative/litmus-checker:2.13.0
    - name: alert-notify
      container:
        image: saranyaj/trigger-alert:v1
        imagePullPolicy: Always
        env:
          - name: EXPERIMENT_RUN_ID
            value: "{{workflow.uid}}"
          - name: NAMESPACE
            value: "{{workflow.parameters.adminModeNamespace}}"
          - name: JIRA_URL
            value: https://hce-gameday.atlassian.net
          - name: JIRA_USERNAME
            valueFrom:
              secretKeyRef:
                name: chaos-alert-secret
                key: JIRA_USERNAME
          - name: JIRA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: chaos-alert-secret
                key: JIRA_PASSWORD
          - name: SLACK_URL
            valueFrom:
              secretKeyRef:
                name: chaos-alert-secret
                key: SLACK_URL
      securityContext:
        runAsUser: 0
status:
  startedAt:
  finishedAt:
